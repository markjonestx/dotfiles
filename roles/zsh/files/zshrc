# The login nodes use their own special prompt
setopt PROMPT_SUBST
setopt appendhistory
setopt auto_pushd

HISTFILE=~/.zsh_history
HISTSIZE=25000
SAVEHIST=2500
PROMPT='%F{green}%*%f %F{magenta}${(%):-%m}%f %F{blue}%~%f $ '

zsh_plugins=$HOME/.local/share/shell/zsh_plugins
source $HOME/.local/share/shell/antidote/antidote.zsh
antidote load $zsh_plugins

# Configure history search
HISTORY_SUBSTRING_SEARCH_PREFIXED=true
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

bindkey '^[[1;5C' forward-word
bindkey '^[^[[C' forward-word
bindkey '^[[1;5D' backward-word
bindkey '^[^[[D' backward-word

# Because TMUX can break things
if [[ $TERM == tmux-256color ]]; then
    if ! infocmp tmux-256color >/dev/null 2>&1; then
        export TERM='xterm-256color'
    fi
fi

# Powerlevel10k requires a ZSH >= 5.01
if [[ "$(echo $ZSH_VERSION | awk -F. '{ printf("%d%03d", $1,$2)}')" -ge 5001 ]]; then

    # Required for instantaneous prompt
    if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
        source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
    fi

    # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
    if [[ -f ~/.local/share/shell/p10k_configuration ]]; then
        source ~/.local/share/shell/p10k_configuration
    fi
fi

if [[ ! $HOSTNAME = kube* ]]; then
    if [ -d "/apps/sudo/bin" ]; then
        export PATH=/apps/sudo/bin:$PATH
    fi
fi

if [ -d "$HOME/.local/bin" ]; then
    export PATH=$HOME/.local/bin:$PATH
fi


if [ -d "$HOME/.cargo" ]; then
    . "$HOME/.cargo/env"
fi

if [ -d "$HOME/.local/go/bin" ]; then
    export PATH=$HOME/.local/go/bin:$PATH
fi

# Saving my home folder from all the ZCompDumps
if [[ ! -d "${XDG_CACHE_HOME:-$HOME/.cache}/zcompdump/" ]]; then
    mkdir "${XDG_CACHE_HOME:-$HOME/.cache}/zcompdump/"
fi
ZSH_COMPDUMP="${XDG_CACHE_HOME:-$HOME/.cache}/zcompdump/${HOSTNAME}-${ZSH_VERSION}"

# Set Editor based on what's available
if command -v nvim &> /dev/null; then
    export EDITOR=$(which nvim)
    export MANPAGER="${EDITOR} +Man!"
    alias vim=nvim
else
    export EDITOR=$(which vim)
    if command -v bat &> /dev/null; then
        export MANPAGER="sh -c 'col -bx | bat -l man -p'"
    fi
fi

# Because git has it's own variable...
export GIT_EDITOR=$EDITOR

if [ -d "$HOME/.fzf" ]; then
    export PATH="$PATH:$HOME/.fzf/bin"
fi

# Setup FZF for use here
if [[ -n $TMUX ]]; then
    export PFZF=$(which fzf-tmux)
else
    export PFZF=$(which fzf)
fi

export FZF_DEFAULT_OPTS=" \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

# Functions to make my life _slightly_ easier
help() {
    "$@" --help 2>&1 | bat --plain --language=help
}

bdiff() {
    if [[ -n $1 ]]; then
        git diff --name-only --relative --diff-filter=d $1 | xargs bat --diff
    else
        git diff --name-only --relative --diff-filter=d | xargs bat --diff
    fi
}

fcd() {
    local dir
    if [[ -n $1 ]]; then
        dir=$(fd . $1 -t d --full-path | $PFZF --prompt "Select directory: ")
    else
        dir=$(fd -t d | $PFZF --prompt "Select directory: ")
    fi

    if [[ -n $dir ]]; then
        cd "$dir"
    else
        echo "Directory not found!"
    fi
}

fcdp() {
    fcd ~/Desktop
}

edit() {
    if [[ -f $1 ]]; then
        $EDITOR $1
    else
        dir=$(fd -t f $1 | $PFZF --prompt "Select file: " --preview "bat --color=always --style=numbers --line-range :500 {}")
        if [[ -n $dir ]]; then
            $EDITOR $dir
        else
            echo "File not found!"
        fi
    fi
}
